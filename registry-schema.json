{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://raw.githubusercontent.com/ACNet-AI/mcp-servers-hub/main/registry-schema.json",
  "title": "MCP Servers Registry",
  "description": "MCP Factory project registry schema - fully automated registration and approval",
  "type": "object",
  "required": ["version", "updated", "projects"],
  "additionalProperties": false,
  "properties": {
    "$schema": {
      "type": "string",
      "description": "JSON Schema reference"
    },
    "version": {
      "type": "string",
      "pattern": "^\\d+\\.\\d+\\.\\d+$",
      "description": "Registry format version"
    },
    "updated": {
      "type": "string",
      "format": "date-time",
      "description": "Last update timestamp"
    },
    "projects": {
      "type": "array",
      "items": {"$ref": "#/definitions/project"}
    }
  },
  "definitions": {
    "project": {
      "type": "object",
      "required": ["name", "author", "description", "repository", "language", "registration", "status"],
      "additionalProperties": false,
      "properties": {
        "name": {
          "type": "string",
          "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$",
          "minLength": 3,
          "maxLength": 50,
          "description": "Project name (lowercase, kebab-case)"
        },
        "author": {
          "type": "string",
          "pattern": "^[a-zA-Z0-9]([a-zA-Z0-9-]){0,38}$",
          "description": "GitHub username"
        },
        "description": {
          "type": "string",
          "minLength": 10,
          "maxLength": 500,
          "description": "Project description"
        },
        "repository": {
          "type": "string",
          "pattern": "^https://github\\.com/[a-zA-Z0-9][a-zA-Z0-9-]{0,38}/[a-zA-Z0-9][a-zA-Z0-9._-]*$",
          "description": "GitHub repository URL"
        },
        "language": {
          "type": "string",
          "const": "python",
          "description": "Programming language (MCP Factory projects only support Python)"
        },
        "registration": {
          "type": "object",
          "required": ["method", "timestamp"],
          "properties": {
            "method": {
              "type": "string", 
              "enum": ["webhook_auto", "manual_submit"],
              "description": "Registration method"
            },
            "timestamp": {
              "type": "string",
              "format": "date-time",
              "description": "Registration timestamp"
            },
            "webhook_version": {
              "type": "string",
              "description": "Webhook service version (for automatic registration)"
            },
            "factory_version": {
              "type": "string",
              "description": "MCP Factory version"
            }
          }
        },
        "status": {
          "type": "object",
          "required": ["verification_status", "quality_score", "auto_approved_at"],
          "properties": {
            "verification_status": {
              "type": "string",
              "enum": ["approved", "rejected"],
              "description": "Automatic verification status: approved (passed quality threshold) or rejected (failed quality threshold)"
            },
            "quality_score": {
              "type": "number",
              "minimum": 0,
              "maximum": 1,
              "description": "Quality score (0-1)"
            },
            "structure_compliance": {
              "type": "number",
              "minimum": 0,
              "maximum": 1,
              "description": "MCP Factory structure compliance (0-1)"
            },
            "auto_approved_at": {
              "type": "string",
              "format": "date-time",
              "description": "Automatic approval/rejection timestamp"
            },
            "approval_reason": {
              "type": "string",
              "description": "Automatic approval/rejection reason based on quality metrics"
            }
          }
        },
        "mcp_factory": {
          "type": "object",
          "description": "MCP Factory specific data",
          "properties": {
            "version": {
              "type": "string",
              "description": "Factory version"
            },
            "category": {
              "type": "string",
              "enum": ["server", "tools", "resources", "prompts"],
              "description": "MCP project category"
            },
            "structure_check": {
              "type": "object",
              "properties": {
                "required_files": {
                  "type": "object",
                  "properties": {
                    "pyproject_toml": {"type": "boolean"},
                    "server_py": {"type": "boolean"},
                    "readme": {"type": "boolean"}
                  }
                },
                "required_directories": {
                  "type": "object", 
                  "properties": {
                    "tools": {"type": "boolean"},
                    "resources": {"type": "boolean"},
                    "prompts": {"type": "boolean"}
                  }
                }
              }
            }
          }
        },
        "auto_detected": {
          "type": "object",
          "description": "Auto-detected project information",
          "properties": {
            "license": {
              "type": "string",
              "description": "Detected license"
            },
            "python_version": {
              "type": "string", 
              "description": "Detected minimum Python version"
            },
            "tags": {
              "type": "array",
              "items": {"type": "string"},
              "description": "Tags generated based on code analysis"
            },
            "dependencies": {
              "type": "object",
              "properties": {
                "mcp_related": {
                  "type": "array", 
                  "items": {"type": "string"},
                  "description": "MCP-related dependencies"
                },
                "main_packages": {
                  "type": "array", 
                  "items": {"type": "string"},
                  "description": "Main dependency packages"
                }
              }
            },
            "confidence": {
              "type": "object",
              "patternProperties": {
                ".*": {"type": "number", "minimum": 0, "maximum": 1}
              },
              "description": "Confidence scores for each detection item"
            }
          }
        }
      }
    }
  }
} 